{"version":3,"sources":["webpack:///./src/views/Chats.vue?80d8","webpack:///./src/views/Chats.vue","webpack:///./src/views/Chats.vue?157c"],"names":["class","chats","length","chat","name","getNotificationsLength","to","users","find","user","authorizedUser","src","BACKEND_DOMAIN","userObj","photo","messages","getLastMessage","getLastTime","split","data","computed","authorizedUserObj","this","contacts","contact","watch","val","$router","push","sortChatsByActivity","methods","v","sort","elem","nextElem","time","timeNext","elemDate","Date","nextElemDate","dataTime","timeOfSend","timeOfCreate","text","substr","notifications","filter","n","messageFrom","mounted","render","__scopeId"],"mappings":"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","file":"js/about.96742880.js","sourcesContent":["export { default } from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Chats.vue?vue&type=style&index=0&id=12457b96&lang=scss&scoped=true\"; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Chats.vue?vue&type=style&index=0&id=12457b96&lang=scss&scoped=true\"","<template>\r\n  <div class=\"container\">\r\n                    <div v-if=\"chats.length\" class=\"chats mainList\">\r\n                        <template\r\n                            v-for=\"chat in chats\"\r\n                            :key=\"chat.name\"\r\n                        >\r\n\r\n                                <div class=\"chats__item mainList__elem\" :class=\"{'chats__item--active': getNotificationsLength(chat)}\">\r\n                                    <router-link :to=\"{path: '/'+chat.users.find(user => user != authorizedUser)+'/chat'}\"></router-link>\r\n                                    <div class=\"userIcon\">\r\n                                        <img :src=\"BACKEND_DOMAIN+userObj(chat).photo\">\r\n                                    </div>\r\n                                    <div class=\"chats__text\">\r\n                                        <div class=\"chats__username\">{{userObj(chat).name}}</div>\r\n                                        <div v-if=\"chat.messages.length\" class=\"chats__messageText\">{{getLastMessage(chat)}}</div>\r\n                                    </div>\r\n                                    <div class=\"chats__time\">{{getLastTime(chat).split(',')[3]}}</div>\r\n                                    <span class=\"newMessages  newMessages--grey chats__newMessagesCount\" :class=\"{'newMessages--active': getNotificationsLength(chat)}\">{{getNotificationsLength(chat)}}</span>\r\n                                </div>\r\n                            \r\n                        </template>\r\n                    </div>\r\n                    <div class=\"chats__noChats\" v-else>No chats found</div>   \r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {mapActions, mapState} from 'vuex'\r\nimport BACKEND_DOMAIN from '../messanger-config';\r\n\r\n export default {\r\n    name: \"Chats\",\r\n    data(){\r\n        return{\r\n            BACKEND_DOMAIN: BACKEND_DOMAIN\r\n        }\r\n    },\r\n    computed: {\r\n        ...mapState([\r\n            'contacts',\r\n            'chats',\r\n            'authorizedUser'\r\n        ]),\r\n        authorizedUserObj(){\r\n\t\t\tif(this.contacts.length != 0){\r\n\t\t\t\tlet user = this.contacts.find(contact => contact.name == this.authorizedUser)\r\n\t\t\t\treturn user\r\n\t\t\t}else{\r\n\t\t\t\treturn {\r\n\t\t\t\t\t\"notifications\": []\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n    },\r\n    watch:{\r\n        authorizedUser: function(val){\r\n            if(!val){\r\n                this.$router.push('/')\r\n            }\r\n        },\r\n        chats: function(){\r\n            this.sortChatsByActivity()\r\n        },\r\n    },\r\n    methods:{\r\n        userObj(chat){\r\n\t\t\tlet user = chat.users.find(user => user != this.authorizedUser)\r\n            let userObj = this.contacts.find(contact => contact.name == user)\r\n\t\t\treturn userObj\r\n        },\r\n        sortChatsByActivity(){\r\n            let v = this\r\n\r\n            this.chats.sort(function (elem, nextElem) {\r\n                let time = v.getLastTime(elem)\r\n                let timeNext = v.getLastTime(nextElem)\r\n\r\n                let elemDate = new Date(time)\r\n                let nextElemDate = new Date(timeNext)\r\n\r\n                if (elemDate > nextElemDate) return -1; \r\n                if (elemDate == nextElemDate) return 0;\r\n                if (elemDate < nextElemDate) return 1;\r\n\r\n            });\r\n        },\r\n        getLastTime(chat){\r\n            if(chat.messages.length){\r\n                let dataTime = chat.messages[chat.messages.length-1].timeOfSend\r\n                return dataTime\r\n            }else{\r\n                let dataTime = chat.timeOfCreate\r\n                return dataTime\r\n            }\r\n        },\r\n        getLastMessage(chat){\r\n            let text = chat.messages[chat.messages.length-1].text\r\n\r\n            if(text.length > 30){\r\n                text = text.substr(0, 30)+\" . . .\"\r\n            }\r\n\r\n            return text\r\n        },\r\n        getNotificationsLength(chat){\r\n            if(this.authorizedUserObj){\r\n                let length = this.authorizedUserObj.notifications.filter(n => n.messageFrom == chat.users.find(user => user != this.authorizedUser)).length\r\n                return length\r\n            }else{\r\n                return false\r\n            }\r\n        },\r\n    },\r\n    mounted(){\r\n        let v = this\r\n\r\n        if(!this.authorizedUser){\r\n            this.$router.push('/404')\r\n        }else{\r\n            this.sortChatsByActivity()\r\n        }\r\n    }\r\n }\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import '../assets/colors';\r\n\r\n    .chats {\r\n    padding-bottom: 20px;\r\n    display: flex;\r\n    flex-flow: column;\r\n    position: relative;\r\n\r\n    &__item {\r\n        position: relative;\r\n\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n\r\n        padding-right: 70px;\r\n\r\n        &--active{\r\n            background-color: $chat-item-active;\r\n            border-bottom: 1px ridge $base-color;\r\n        }\r\n    }\r\n    &__newMessagesCount{\r\n        position: absolute;\r\n        right: 20px;\r\n    }\r\n        &__text {\r\n            height: 100%;\r\n\r\n            display: flex;\r\n            flex-flow: column;\r\n            justify-content: space-between;\r\n\r\n            position: relative;\r\n\r\n            a{\r\n                position: absolute;\r\n\r\n                width: 100%;\r\n                height: 100%;\r\n            }\r\n        }\r\n\r\n            &__username {\r\n                color: $base-font-color;\r\n            }\r\n\r\n            &__messageText {\r\n                color: lighten($base-font-color, 10%);\r\n                width: 292px;\r\n            }\r\n\r\n        &__time {\r\n            color: lighten($base-font-color, 20%);\r\n        }\r\n\r\n        &__noChats{\r\n            left: 48%;\r\n            top: 50%;\r\n\r\n            position: absolute;\r\n        }\r\n}\r\n\r\n// MEDIA -------------\r\n@media (max-width: 575px) {\r\n    .chats__messageText{\r\n        width: 200px;\r\n        word-wrap: break-word;\r\n    }\r\n}\r\n@media (max-width: 455px) {\r\n     .chats__messageText{\r\n        width: 100px;\r\n    }\r\n    .chats__item{\r\n        font-size: 14px;\r\n    }\r\n}\r\n@media (max-width: 355px) {\r\n    .chats__item{\r\n        padding-right: 25px;\r\n    }\r\n    .chats__newMessagesCount{\r\n        right: 5px;\r\n    }\r\n}\r\n</style>","import { render } from \"./Chats.vue?vue&type=template&id=12457b96&scoped=true&bindings={\\\"BACKEND_DOMAIN\\\":\\\"data\\\",\\\"authorizedUserObj\\\":\\\"options\\\",\\\"userObj\\\":\\\"options\\\",\\\"sortChatsByActivity\\\":\\\"options\\\",\\\"getLastTime\\\":\\\"options\\\",\\\"getLastMessage\\\":\\\"options\\\",\\\"getNotificationsLength\\\":\\\"options\\\"}\"\nimport script from \"./Chats.vue?vue&type=script&lang=js\"\nexport * from \"./Chats.vue?vue&type=script&lang=js\"\n\nimport \"./Chats.vue?vue&type=style&index=0&id=12457b96&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-12457b96\"\n\nexport default script"],"sourceRoot":""}